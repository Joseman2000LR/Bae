UN CLUB ALMACENA LOS DATOS DE SUS SOCIOS EN UNA TABLA DENOMINADA "socios", LAS
INSCRIPCIONES EN "inscritos" Y EN OTRA TABLA "morosos" GUARDA LOS DOCUMENTOS DE LOS SOCIOS
QUE DEBEN MATRÍCULAS.

1- Elimine las tablas si existen:

IF OBJECT_ID('inscritos') IS NOT NULL

DROP TABLE INSCRITOS;

IF OBJECT_ID('socios') IS NOT NULL

DROP TABLE SOCIOS;

IF OBJECT_ID('morosos') IS NOT NULL

DROP TABLE MOROSOS;

--2- Cree las tablas, con las siguientes estructuras:
CREATE TABLE SOCIOS(
    DOCUMENTO CHAR(8) NOT NULL,
    NOMBRE VARCHAR(30),
    DOMICILIO VARCHAR(30),
    CONSTRAINT PK_SOCIOS PRIMARY KEY(DOCUMENTO)
);

CREATE TABLE INSCRITOS(
    NUMERO INT IDENTITY,
    DOCUMENTO CHAR(8) NOT NULL,
    DEPORTE VARCHAR(20),
    MATRICULA CHAR(1),
    CONSTRAINT FK_INSCRITOS_DOCUMENTO FOREIGN KEY (DOCUMENTO) REFERENCES SOCIOS(DOCUMENTO),
    CONSTRAINT CK_INSCRITOS_MATRICULA CHECK (MATRICULA IN ('s', 'n')),
    CONSTRAINT PK_INSCRITOS PRIMARY KEY(DOCUMENTO, DEPORTE)
);

CREATE TABLE MOROSOS(
    DOCUMENTO CHAR(8) NOT NULL
);

--3- Inserte algunos registros en las 3 tablas:
INSERT INTO SOCIOS VALUES(
    '22222222',
    'Ana Acosta',
    'Avenida de los príncipes, 112'
);

INSERT INTO SOCIOS VALUES(
    '23333333',
    'Berto Romero',
    'La Milagrosa, 45'
);

INSERT INTO SOCIOS VALUES(
    '24444444',
    'Carlos Castro',
    'Avda. Miguel Hermoso, 76'
);

INSERT INTO SOCIOS VALUES(
    '25555555',
    'María Morales',
    'Camino de Los Llanos S/N'
);

INSERT INTO INSCRITOS VALUES(
    '22222222',
    'tenis',
    's'
);

INSERT INTO INSCRITOS VALUES(
    '22222222',
    'natacion',
    'n'
);

INSERT INTO INSCRITOS VALUES(
    '23333333',
    'tenis',
    'n'
);

INSERT INTO INSCRITOS VALUES(
    '24444444',
    'futbol',
    's'
);

INSERT INTO INSCRITOS VALUES(
    '24444444',
    'natacion',
    's'
);

INSERT INTO MOROSOS VALUES(
    '22222222'
);

INSERT INTO MOROSOS VALUES(
    '23333333'
);

4- Cree un disparador para la tabla "inscritos" que se active ante una sentencia "update" y

NO PERMITA ACTUALIZAR MÁS DE UN REGISTRO.

CREATE TRIGGER CONTROLADORUPADTE ON INSCRITOS AFTER
    UPDATE AS
BEGIN
    if (
        SELECT
            COUNT(*)
        FROM
            DELETED
    ) >1
BEGIN
    DECALRE @ MENSAJE VARCHAR(59) SET @MENSAJES ='error' RAISERROR(@ERROR, 16, 1);
    ROLLBACK TRANSACTION;
END
END;
5- CREE OTRO DISPARADOR PARA LA TABLA "inscritos" QUE SE ACTIVE ANTE UNA SENTENCIA "update". SI SE ACTUALIZA EL PAGO DE LA MATRÍCULA A 's', EL SOCIO DEBE ELIMINARSE DE LA TABLA "morosos";
NO DEBE PERMITIR MODIFICAR A 'n' UNA MATRÍCULA PAGA. CREATE TRIGGER CONTROLADORUPADTE ON INSCRITOS AFTER
create TRIGGER CONTROLADORUPADTE ON INSCRITOS AFTER
update as begin 
    if(select matrcula from insert )='s' and (SELECT matricula from deleted)='n'
    begin 
    deleted morosos  from mororos inner join deleted on morosos.documentos =deleted.documentos
    end
    else 
    if(select matricula from insert)='n' and (select matricula from deleted)='s'
     BEGIN
    DECALRE @mensaje varchar(50)= 'error'
    RAISERROR(@mensaje, 16, 1);
    ROLLBACK TRANSACTION;
end;

6- ACTUALICE CUALQUIER CAMPO (DIFERENTE DE "matricula") DE UN REGISTRO DE LA TABLA "inscritos". 7- ACTUALICE CUALQUIER CAMPO (DIFERENTE DE "matricula") DE VARIOS REGISTROS DE LA TABLA "inscritos". 8- ACTUALICE EL CAMPO "matricula" A 's' DE UN INSCRITO QUE DEBA LA MATRÍCULA. 9- VERIFIQUE QUE EL CAMPO SE ACTUALIZÓ Y QUE EL SOCIO YA NO ESTÁ EN "morosos".
SELECT
    *
FROM
    INSCRIPCION;
SELECT
    *
FROM
    MOROSOS;
10-ACTUALICE EL CAMPO "matricula" A 'n' DE UN INSCRITO QUE TENGA LA MATRÍCULA PAGA