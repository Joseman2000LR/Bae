UNA EMPRESA ALMACENA LOS DATOS DE SUS EMPLEADOS EN UNA TABLA LLAMADA "Empleado".

1- Elimine el procedimiento llamado "pa_empleados_sueldo" si existe:

IF OBJECT_ID('pa_empleados_sueldo') IS NOT NULL

DROP PROCEDURE PA_EMPLEADOS_SUELDO;

2- Cree un procedimiento almacenado llamado "pa_empleados_sueldo" que seleccione los

NOMBRES, APELLIDOS Y SUELDOS DE LOS EMPLEADOS QUE TENGAN UN SUELDO SUPERIOR O IGUAL AL
ENVIADO COMO PARÁMETRO.

CREATE PROCEDURE PA_EMPLEADOS_SUELDO DROP PROCEDURE PA_EMPLEADOS_SUELDO @SUELDO DECIMAL(6, 2) AS
BEGIN
    SELECT
        NOMBRE APELLIDOS
    FROM
        CIUDADES
    WHERE
        SUELDO >= @SUELDO;
END;

3- EJECUTE EL PROCEDIMIENTO CREADO ANTERIORMENTE CON DISTINTOS VALORES: SUELDO 1400 Y SUELDO 1500 EXECUTE PA_EMPLEADOS_SUELDO @SUELDO 1400;
EXECUTE PA_EMPLEADOS_SUELDO @SUELDO 1500;
4- EJECUTE EL PROCEDIMIENTO ALMACENADO "pa_empleados_sueldo" SIN PARÁMETROS. ¿QUÉ SUCEDE? ¿POR QUÉ? EXECUTE PA_EMPLEADOS_SUELDO;
5- ELIMINE EL PROCEDIMIENTO ALMACENADO "pa_empleados_actualizar_sueldo" SI EXISTE. IF OBJECT_ID('PA_EMPLEADOS_ACTUALIZAR_SUELDO') IS NOT NULL DROP PROCEDURE PA_EMPLEADOS_SUELDO;
6- CREE UN PROCEDIMIENTO ALMACENADO LLAMADO "pa_empleados_actualizar_sueldo" QUE ACTUALICE LOS SUELDOS IGUALES AL ENVIADO COMO PRIMER PARÁMETRO CON EL VALOR ENVIADO COMO SEGUNDO PARÁMETRO. CREATE PROCEDURE PA_EMPLEADOS_SUELDO DROP PROCEDURE PA_EMPLEADOS_SUELDO @SUELDO1 DECIMAL(6, 2) @SUELDO2 DECIMAL(6, 2) AS
BEGIN
    UPDATE EMPLEADO
    SET
        SUELDO= @SUELDO2
    WHERE
        SUELDO= @SUELDO1;
END;

7- EJECUTE EL PROCEDIMIENTO CREADO ANTERIORMENTE Y VERIFIQUE SI SE HA EJECUTADO CORRECTAMENTE: SUELDO 1300, 1350 
EXECUTE PA_EMPLEADOS_SUELDO @SUELDO1 1300 @SUELDO2 1350;
8- EJECUTE EL PROCEDIMIENTO "pa_empleados_actualizar_sueldo" ENVIANDO UN SOLO PARÁMETRO. ¿QUÉ SUCEDE? ¿POR QUÉ? 
EXECUTE PA_EMPLEADOS_SUELDO @SUELDO1 1300;
9- EJECUTE EL PROCEDIMIENTO ALMACENADO "pa_empleados_actualizar_sueldo" ENVIANDO EN PRIMER LUGAR EL PARÁMETRO @SUELDONUEVO Y EN SEGUNDO LUGAR @SUELDOANTERIOR (PARÁMETROS POR NOMBRE). 
EXECUTE PA_EMPLEADOS_SUELDO @SUELDO1 1300 @SUELDO2 '1350';
10- VERIFIQUE EL CAMBIO. 11- ELIMINE EL PROCEDIMIENTO ALMACENADO "pa_sueldototal", SI EXISTE. 
IF OBJECT_ID('PA_SUELDOTOTAL') IS NOT NULL DROP PROCEDURE PA_EMPLEADOS_SUELDO;
12- CREE UN PROCEDIMIENTO LLAMADO "pa_sueldototal" QUE RECIBA EL DOCUMENTO DE UN EMPLEADO Y MUESTRE SU NOMBRE, APELLIDO Y EL SUELDO TOTAL (RESULTADO DE LA SUMA DEL SUELDO Y SALARIO POR HIJO, QUE ES DE 200 € SI EL SUELDO ES MENOR A 1500 € Y 100 €, SI EL SUELDO ES MAYOR O IGUAL A 1500€). COLOQUE COMO VALOR POR DEFECTO PARA EL PARÁMETRO EL PATRÓN "%". 
CREATE PROCEDURE PA_SUELDOTOTAL @DOCUMENTO VARCHAR(20) = '%' AS
BEGIN
    SET NOCOUNT ON;
    SELECT
        NOMBRE,
        APELLIDO,
        CASE
            WHEN SUELDO < 1500 THEN
                SUELDO + (200 * (  SELECT COUNT(*)  FROM HIJOS  WHERE  EMPLEADODOCUMENTO = @DOCUMENTO ))
            ELSE SUELDO + (100 * ( SELECT  COUNT(*) FROM  HIJOS WHERE EMPLEADODOCUMENTO = @DOCUMENTO ))
        END AS SUELDOTOTAL
    FROM EMPLEADOS WHERE DOCUMENTO = @DOCUMENTO;
END;


13- EJECUTE EL PROCEDIMIENTO ANTERIOR ENVIANDO DIFERENTES VALORES: '22333333', '22444444' Y '22666666' 
EXECUTE PA_SUELDOTOTAL @DOCUMENTO 22333333;
EXECUTE PA_SUELDOTOTAL @DOCUMENTO 22444444;
EXECUTE PA_SUELDOTOTAL @DOCUMENTO 22666666;
14- EJECUTE EL PROCEDIMIENTO SIN ENVIAR PARÁMETRO PARA QUE TOME EL VALOR POR DEFECTO. 
EXECUTE PA_SUELDOTOTAL @DOCUMENTO;
15- ELIMINE EL PROCEDIMIENTO LLAMADO "pa_departamento" SI EXISTE. 
IF OBJECT_ID('PA_DEPARTAMENTO') IS NOT NULL DROP PROCEDURE PA_DEPARTAMENTO;
16- CREE UN PROCEDIMIENTO ALMACENADO LLAMADO "pa_departamento" AL CUAL LE ENVIAMOS EL NOMBRE DE UN DEPARTAMENTO Y QUE NOS RETORNE EL PROMEDIO DE SUELDOS DE TODOS LOS EMPLEADOS DE ESE DEPARTAMENTO Y EL VALOR MAYOR DE SUELDO (DE ESE DEPARTAMENTO). 
CREATE PROCEDURE PA_DEPARTAMENTO @NOMBRE_DEPARTAMENTO VARCHAR(100) AS
BEGIN
    SET NOCOUNT ON;
    DECLARE
        @PROMEDIO_SUEDO DECIMAL(10, 2);
        DECLARE        @MAYOR_SUELDO DECIMAL(10, 2);
        SELECT         @PROMEDIO_SUEDO = AVG(SUELDO) FROM EMPLEADOS WHERE DEPARTAMENTO = @NOMBRE_DEPARTAMENTO;
        SELECT         @MAYOR_SUELDO = MAX(SUELDO) FROM EMPLEADOS WHERE DEPARTAMENTO = @NOMBRE_DEPARTAMENTO;
        SELECT         @PROMEDIO_SUEDO AS PROMEDIOSUELDOS, @MAYOR_SUELDO AS MAYORSUELDO;
    END;

17- EJECUTE EL PROCEDIMIENTO CREADO ANTERIORMENTE CON DISTINTOS VALORES. 
EXECUTE PA_DEPARTAMENTO @NOMBRE_DEPARTAMENTO = 'Ventas';
EXEC pa_departamento @nombre_departamento = 'Recursos Humanos';
EXEC pa_departamento @nombre_departamento = 'Tecnología';
18- EJECUTE EL PROCEDIMIENTO "pa_ departamento" SIN PASAR VALOR PARA EL PARÁMETRO "departamento". 
LUEGO MUESTRE LOS VALORES DEVUELTOS POR EL PROCEDIMIENTO. ¿QUÉ SUCEDE? ¿POR QUÉ? 
EXECUTE PA_DEPARTAMENTO @NOMBRE_DEPARTAMENTO;
19- MODIFICA LA EJECUCIÓN ANTERIOR PARA QUE HACIENDO USO DE LA FUNCIÓN CAST QUE REALIZA CONVERSIONES DE TIPOS, MOSTRAR LA SALIDA DE LA SIGUIENTE FORMA: ‘EL DEPARTAMENTO DE SECRETARÍA TIENE UN SUELDO MEDIO DE 1600.00 €, Y EL SUELDO MAYOR ES DE 1800.00 €’, POR EJEMPLO. 
20- ELIMINE EL PROCEDIMIENTO ALMACENADO "pa_sueldototal", SI EXISTE Y CREE UN PROCEDIMIENTO CON ESE NOMBRE QUE RECIBA EL DOCUMENTO DE UN EMPLEADO Y RETORNE EL SUELDO TOTAL, RESULTADO DE LA SUMA DEL SUELDO Y SALARIO POR HIJO, QUE ES 200 SI EL SUELDO ES MENOR A 1500 Y 100 SI ES MAYOR O IGUAL, CON EL SIGUIENTE FORMATO: ‘EL EMPLEADO CON DOCUMENTO 222222222 TIENE UN SUELDO TOTAL DE 1900.00 € Y TIENE 2 HIJOS Y UN SUELDO DE 1500.00€’, POR EJEMPLO. 
21- EJECUTE EL PROCEDIMIENTO ANTERIOR ENVIANDO UN DOCUMENTO EXISTENTE. 
22- EJECUTE EL PROCEDIMIENTO ANTERIOR ENVIANDO UN DOCUMENTO INEXISTENTE. RETORNA "null". 
23- EJECUTE EL PROCEDIMIENTO ANTERIOR ENVIANDO EL DOCUMENTO DE UN EMPLEADO EN CUYO CAMPO "sueldo" CONTENGA "null". ¿QUÉ SUCEDE? ¿POR QUÉ? 
24- EJECUTE EL PROCEDIMIENTO ANTERIOR SIN ENVIAR VALOR PARA EL PARÁMETRO "documento". ¿QUÉ SUCEDE? ¿POR QUÉ?